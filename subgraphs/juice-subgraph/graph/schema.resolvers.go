package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"
	"juice-subgraph/graph/model"
)

// Juice is the resolver for the juice field.
func (r *queryResolver) Juice(ctx context.Context, id string) (*model.Juice, error) {
	dummyJuices := []*model.Juice{
		{
			ID:   "1",
			Name: "Orange Juice",
		},
		{
			ID:   "2",
			Name: "Apple Juice",
		},
	}
	for _, juice := range dummyJuices {
		if juice.ID == id {
			return juice, nil
		}
	}
	return nil, fmt.Errorf("Juice not found for ID: %s", id)
}

// Juices is the resolver for the juices field.
func (r *queryResolver) Juices(ctx context.Context) ([]*model.Juice, error) {
	dummyJuices := []*model.Juice{
		{
			ID:   "1",
			Name: "Orange Juice",
		},
		{
			ID:   "2",
			Name: "Apple Juice",
		},
	}

	return dummyJuices, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
