package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"
	"ingredients-subgraph/graph/model"
)

// FindJuiceByID is the resolver for the findJuiceByID field.
func (r *entityResolver) FindJuiceByID(ctx context.Context, id string) (*model.Juice, error) {
	dummyJuices := []*model.Juice{
		{
			ID:   "1",
			Name: "Orange Juice",
			Ingredients: []*model.Ingredient{
				{ID: "1", Name: "Water"},
				{ID: "2", Name: "Orange"},
			},
		},
		{
			ID:   "2",
			Name: "Apple Juice",
			Ingredients: []*model.Ingredient{
				{ID: "1", Name: "Water"},
				{ID: "3", Name: "Apple"},
			},
		},
	}
	for _, juice := range dummyJuices {
		if juice.ID == id {
			return juice, nil
		}
	}
	return nil, fmt.Errorf("juice not found for ID: %s", id)
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
